from _typeshed import IdentityFunction
from typing import Callable, Optional, Sequence, TypeVar

_T = TypeVar("_T")

def lfu_cache(maxsize: int | IdentityFunction | None = ..., typed: bool = ...) -> IdentityFunction: ...
def lru_cache(maxsize: int | IdentityFunction | None = ..., typed: bool = ...) -> IdentityFunction: ...
def rr_cache(
    maxsize: int | IdentityFunction | None = ..., choice: Optional[Callable[[Sequence[_T]], _T]] = ..., typed: bool = ...
) -> IdentityFunction: ...
def ttl_cache(
    maxsize: int | IdentityFunction | None = ..., ttl: float | int = ..., timer: Callable[[], float] = ..., typed: bool = ...
) -> IdentityFunction: ...
